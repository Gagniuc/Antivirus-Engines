import os
import ahocorasick
import tkinter as t
from tkinter import filedialog as f, scrolledtext as s, ttk as k, messagebox as m

def l(sf):
    a = ahocorasick.Automaton()
    c = 0
    with open(sf, 'r') as x:
        for y in x:
            p = y.strip().split('=')
            if len(p) == 2:
                c += 1
                n, h = p
                a.add_word(h, (n,))
    a.make_automaton()
    return a, c

def q(fp, a):
    try:
        with open(fp, 'rb') as x:
            d = x.read()
            h = d[:1024].hex()
            ftr = d[-1024:].hex()
            for z in [h, ftr]:
                for j, sgn in a.iter(z):
                    return True, f"File: {fp}\nPotentially malicious! ^\nSignature found: {sgn}\n"
            return False, f"File: {fp}\nAppears to be clean!\n"
    except Exception as e:
        return False, f"File: {fp}\nStatus: Error processing file - {e}\n"

def r():
    a = None
    c = 0

    R = t.Tk()
    R.title('A HEX Signature Scanner (Gagniuc - Scut AV)')

    def L():
        nonlocal a, c
        sf = f.askopenfilename(
            title="Select Signature File",
            filetypes=(("Text files", "*.db"), ("All files", "*.*"))
        )
        if sf:
            a, c = l(sf)
            B2.config(state=t.NORMAL)  # Schimbat aici!
            D.config(text=f"Total Signatures Loaded: {c}")

    def Q():
        nonlocal a
        if not a:
            m.showinfo("Information", "Load a signature file before scanning.")
            return

        x = {z.strip() for z in G.get().split(',')}
        if not x:
            m.showinfo("Information", "Enter file extensions to scan.")
            return

        y = f.askdirectory()
        if y:
            H.delete(1.0, t.END)
            F = []
            for X, _, Y in os.walk(y):
                F.extend(os.path.join(X, z) for z in Y if any(z.endswith(e) for e in x))
            I['maximum'] = len(F)
            ic = 0
            cc = 0
            for fp in F:
                inf, res = q(fp, a)
                H.insert(t.END, f"{res}\n")
                H.update_idletasks()
                I['value'] += 1
                I.update_idletasks()
                if inf:
                    ic += 1
                else:
                    cc += 1
            J.config(text=f"Scan Summary: {ic} Infected, {cc} Clean")

    B = t.Button(R, text="Load Signature", command=L)
    B.pack(pady=10)

    D = t.Label(R, text="Total Signatures Loaded: 0")
    D.pack(pady=10)

    G = t.Entry(R)
    G.pack(pady=10)
    G.insert(0, ".exe,.dll,.docx")

    B2 = t.Button(R,
                  text="Browse Folder and Scan",
                  command=Q,
                  state=t.DISABLED)
    B2.pack(pady=10)

    I = k.Progressbar(R,
                     orient="horizontal",
                     length=300,
                     mode="determinate")
    I.pack(pady=10)

    J = t.Label(R, text="Scan Summary: Not started")
    J.pack(pady=10)

    H = s.ScrolledText(R,
                      wrap=t.WORD,
                      width=80,
                      height=20)
    H.pack(pady=10, padx=10)

    R.mainloop()

if __name__ == "__main__":
    r()

# References
# Paul A. Gagniuc. Antivirus Engines: From Methods to Innovations, Design, and Applications. Cambridge, MA: Elsevier Syngress, 2024. pp. 1-656.

